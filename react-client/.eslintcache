[{"/Users/wuriyanto/Documents/innovation-day/react-client/src/index.js":"1","/Users/wuriyanto/Documents/innovation-day/react-client/src/App.js":"2","/Users/wuriyanto/Documents/innovation-day/react-client/src/reportWebVitals.js":"3"},{"size":500,"mtime":1606913802166,"results":"4","hashOfConfig":"5"},{"size":2250,"mtime":1606917796836,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1606913802168,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1ntoehb",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"/Users/wuriyanto/Documents/innovation-day/react-client/src/index.js",[],["16","17"],"/Users/wuriyanto/Documents/innovation-day/react-client/src/App.js",["18"],"import logo from './logo.svg';\nimport './App.css';\nimport React, {useEffect} from 'react';\nimport mqtt from 'mqtt';\n\nconst options = {\n  protocol: 'ws',\n  clientId: 'react-client',\n  username: 'mylord',\n  password: '12345',\n};\n\nfunction App() {\n\n  useEffect(() => {\n\n    let notification;\n    \n    let client = mqtt.connect('ws://192.168.33.13:1884', options);\n\n    client.on('connect', (packet) => {\n      client.subscribe('test1', {}, (err, granted) => {\n        console.log('react client subscription succeed');\n        console.log(granted);\n      });\n    });\n\n    client.on('error', (err) => {\n      console.log('mqtt connection error: ', err);\n    });\n\n    client.on('message', (topic, message, packet) => {\n      console.log('-------------------------------');\n      console.log(\"message from topic : \", topic);\n      let msg = message.toString();\n      let msgJSON = JSON.parse(msg);\n      console.log(msgJSON);\n\n      // display notification\n      showNotification(msgJSON);\n    });\n\n    // check if browser support Notification\n    const isSupportNotification = ('Notification' in window);\n\n    const showNotification = (message) => {\n      const messageOptions = {\n        body: message.content,\n        dir: 'ltr',\n      };\n\n      notification = new Notification('Innovation Day', messageOptions);\n    };\n\n    const closeNotification = () => {\n      notification.close();\n    };\n\n    if (!isSupportNotification) {\n      console.log('browser does not support notifications');\n    } else {\n      Notification.requestPermission()\n      .then((permission) => {\n        console.log(permission);\n      }).catch((err) => {\n        console.log('permission not granted: ', err);\n      });\n    }\n\n    return () => {\n      if (client.connected) {\n        client.end();\n      }\n    }\n\n  });\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/wuriyanto/Documents/innovation-day/react-client/src/reportWebVitals.js",[],{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":55,"column":11,"nodeType":"25","messageId":"26","endLine":55,"endColumn":28},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"no-unused-vars","'closeNotification' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]